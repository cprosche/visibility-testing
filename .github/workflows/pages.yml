name: Deploy Dashboard to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    # Update dashboard daily at 00:00 UTC
    - cron: '0 0 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Test Results Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build test runner
        working-directory: test-runner
        run: cargo build --release

      - name: Discover implementations
        id: discover
        working-directory: test-runner
        run: |
          cargo run --release -- discover

      - name: Build all Docker images
        working-directory: test-runner
        run: |
          cargo run --release -- build

      - name: Run all tests
        working-directory: test-runner
        run: |
          cargo run --release -- run

      - name: Prepare dashboard data
        run: |
          # Create directories
          mkdir -p docs/results
          mkdir -p docs/reference

          # Copy latest results to docs
          echo "Copying test results..."
          for impl_dir in results/*/; do
            impl_name=$(basename "$impl_dir")
            # Get the most recent result file for each test case
            for test_file in "$impl_dir"/*.json; do
              if [ -f "$test_file" ]; then
                cp "$test_file" docs/results/
              fi
            done
          done

          # Copy reference results
          echo "Copying reference results..."
          cp test-data/reference-results/*.json docs/reference/ 2>/dev/null || echo "No reference results found"

          # Generate results manifest
          echo "Generating results manifest..."
          cat > docs/results-manifest.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "results": [
          EOF

          # Add all result files
          first=true
          for file in docs/results/*.json; do
            if [ -f "$file" ]; then
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> docs/results-manifest.json
              fi
              echo "      \"$(basename "$file")\"" >> docs/results-manifest.json
            fi
          done

          cat >> docs/results-manifest.json << EOF

            ]
          }
          EOF

          # Generate reference manifest
          echo "Generating reference manifest..."
          cat > docs/reference-manifest.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "results": [
          EOF

          # Add all reference files
          first=true
          for file in docs/reference/*.json; do
            if [ -f "$file" ]; then
              if [ "$first" = true ]; then
                first=false
              else
                echo "," >> docs/reference-manifest.json
              fi
              echo "      \"$(basename "$file")\"" >> docs/reference-manifest.json
            fi
          done

          cat >> docs/reference-manifest.json << EOF

            ]
          }
          EOF

          echo "Dashboard data prepared successfully"
          echo "Results: $(ls -1 docs/results/*.json 2>/dev/null | wc -l) files"
          echo "Reference: $(ls -1 docs/reference/*.json 2>/dev/null | wc -l) files"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post summary
        run: |
          echo "## ðŸš€ Dashboard Deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The test results dashboard has been successfully deployed to GitHub Pages." >> $GITHUB_STEP_SUMMARY
